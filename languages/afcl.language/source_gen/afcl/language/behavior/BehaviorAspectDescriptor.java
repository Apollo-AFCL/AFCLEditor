package afcl.language.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myIDataScope__BehaviorDescriptor = new IDataScope__BehaviorDescriptor();
  private final BHDescriptor myIResultScope__BehaviorDescriptor = new IResultScope__BehaviorDescriptor();
  private final BHDescriptor myFunction__BehaviorDescriptor = new Function__BehaviorDescriptor();
  private final BHDescriptor myWorkflow__BehaviorDescriptor = new Workflow__BehaviorDescriptor();
  private final BHDescriptor myFunctionBlock__BehaviorDescriptor = new FunctionBlock__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return myFunction__BehaviorDescriptor;
      case 1:
        return myFunctionBlock__BehaviorDescriptor;
      case 2:
        return myIDataScope__BehaviorDescriptor;
      case 3:
        return myIResultScope__BehaviorDescriptor;
      case 4:
        return myWorkflow__BehaviorDescriptor;
      default:
    }
    return null;
  }
  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xec3060ee1f234e47L, 0xaf803618736238b3L, 0x3365a85a337bbaa5L), MetaIdFactory.conceptId(0xec3060ee1f234e47L, 0xaf803618736238b3L, 0x658fbcf6b68e2599L), MetaIdFactory.conceptId(0xec3060ee1f234e47L, 0xaf803618736238b3L, 0x3241eea9eccbb596L), MetaIdFactory.conceptId(0xec3060ee1f234e47L, 0xaf803618736238b3L, 0x3241eea9ecce78cdL), MetaIdFactory.conceptId(0xec3060ee1f234e47L, 0xaf803618736238b3L, 0x658fbcf6b68e2596L)).seal();
}
