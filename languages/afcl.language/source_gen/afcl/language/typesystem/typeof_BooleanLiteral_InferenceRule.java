package afcl.language.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import jetbrains.mps.typesystem.inference.EquationInfo;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.builder.SNodeBuilder;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class typeof_BooleanLiteral_InferenceRule extends AbstractInferenceRule_Runtime implements InferenceRule_Runtime {
  public typeof_BooleanLiteral_InferenceRule() {
  }
  public void applyRule(final SNode booleanLiteral, final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    {
      SNode _nodeToCheck_1029348928467 = booleanLiteral;
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:f92fbf43-f5be-404a-8369-1fbbf8cc1fe6(afcl.language.typesystem)", "3703551373945446709", 0, null);
      typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:f92fbf43-f5be-404a-8369-1fbbf8cc1fe6(afcl.language.typesystem)", "3703551373945445320", true), (SNode) createBooleanType_twkkmd_a1a0c0a0b(), _info_12389875345);
    }
  }
  public SAbstractConcept getApplicableConcept() {
    return CONCEPTS.BooleanLiteral$g3;
  }
  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    return new IsApplicableStatus(argument.getConcept().isSubConceptOf(getApplicableConcept()), null);
  }
  public boolean overrides() {
    return false;
  }
  private static SNode createBooleanType_twkkmd_a1a0c0a0b() {
    SNodeBuilder n0 = new SNodeBuilder().init(CONCEPTS.BooleanType$7r);
    return n0.getResult();
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept BooleanLiteral$g3 = MetaAdapterFactory.getConcept(0xec3060ee1f234e47L, 0xaf803618736238b3L, 0x3365a85a33628a46L, "afcl.language.structure.BooleanLiteral");
    /*package*/ static final SConcept BooleanType$7r = MetaAdapterFactory.getConcept(0xec3060ee1f234e47L, 0xaf803618736238b3L, 0x3365a85a335ed389L, "afcl.language.structure.BooleanType");
  }
}
