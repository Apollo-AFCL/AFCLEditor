package afcl.language.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.typesystem.inference.EquationInfo;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SConcept;

public class typeof_Variable_InferenceRule extends AbstractInferenceRule_Runtime implements InferenceRule_Runtime {
  public typeof_Variable_InferenceRule() {
  }
  public void applyRule(final SNode variable, final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    if (SLinkOperations.getTarget(variable, LINKS.type$Yg_e) != null) {
      {
        SNode _nodeToCheck_1029348928467 = variable;
        EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:f92fbf43-f5be-404a-8369-1fbbf8cc1fe6(afcl.language.typesystem)", "3703551373950670753", 0, null);
        typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:f92fbf43-f5be-404a-8369-1fbbf8cc1fe6(afcl.language.typesystem)", "3703551373950670158", true), (SNode) SLinkOperations.getTarget(variable, LINKS.type$Yg_e), _info_12389875345);
      }
      if (!(typeCheckingContext.isSingleTypeComputation())) {
        {
          SNode _nodeToCheck_1029348928467 = SLinkOperations.getTarget(variable, LINKS.value$YbqS);
          EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:f92fbf43-f5be-404a-8369-1fbbf8cc1fe6(afcl.language.typesystem)", "3703551373950672198", 0, null);
          typeCheckingContext.createLessThanInequality((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:f92fbf43-f5be-404a-8369-1fbbf8cc1fe6(afcl.language.typesystem)", "3703551373950672212", true), (SNode) SLinkOperations.getTarget(variable, LINKS.type$Yg_e), true, true, _info_12389875345);
        }
      }
    } else {
      {
        SNode _nodeToCheck_1029348928467 = variable;
        EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:f92fbf43-f5be-404a-8369-1fbbf8cc1fe6(afcl.language.typesystem)", "3703551373950679178", 0, null);
        typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:f92fbf43-f5be-404a-8369-1fbbf8cc1fe6(afcl.language.typesystem)", "3703551373950676716", true), (SNode) typeCheckingContext.typeOf(SLinkOperations.getTarget(variable, LINKS.value$YbqS), "r:f92fbf43-f5be-404a-8369-1fbbf8cc1fe6(afcl.language.typesystem)", "3703551373950679194", true), _info_12389875345);
      }
    }
  }
  public SAbstractConcept getApplicableConcept() {
    return CONCEPTS.Data$gu;
  }
  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    return new IsApplicableStatus(argument.getConcept().isSubConceptOf(getApplicableConcept()), null);
  }
  public boolean overrides() {
    return false;
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink type$Yg_e = MetaAdapterFactory.getContainmentLink(0xec3060ee1f234e47L, 0xaf803618736238b3L, 0x3365a85a336f7db8L, 0x3365a85a336f7ddaL, "type");
    /*package*/ static final SContainmentLink value$YbqS = MetaAdapterFactory.getContainmentLink(0xec3060ee1f234e47L, 0xaf803618736238b3L, 0x3365a85a336f7db8L, 0x3365a85a336f7dd9L, "value");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept Data$gu = MetaAdapterFactory.getConcept(0xec3060ee1f234e47L, 0xaf803618736238b3L, 0x3365a85a336f7db8L, "afcl.language.structure.Data");
  }
}
